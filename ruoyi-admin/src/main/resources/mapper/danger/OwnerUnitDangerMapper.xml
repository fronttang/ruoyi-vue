<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.electrical.danger.mapper.OwnerUnitDangerMapper">
    
    <resultMap type="com.ruoyi.electrical.report.dto.high.HighDangerInfo" id="HighReportDanger">
    	<result property="firstContent"    column="first_content"    />
    	<result property="score"    column="score"    />
    	<result property="description"    column="description"    />
    	<result property="suggestions"    column="suggestions"    />
    	<result property="dangerPic"    column="danger_pic"    />
    	<result property="inspectorId"    column="inspector_id"    />
    	<result property="formId"    column="form_id"    />
        <result property="formDataId"    column="form_data_id"    />
        <result property="maxScore"    column="max_score"    />
        <result property="formName"    column="form_name"    />
        <result property="formDataName"    column="form_data_name"    />
        <result property="dangerId"    column="danger_id"    />
        <result property="accMethod"    column="acc_method"    />
        <result property="dataMaxScore"    column="data_max_score"    />
        <result property="overallPic"    column="overall_pic"    />
        <result property="inspectionPic"    column="inspection_pic"    />
        <result property="rectificationPic"    column="rectification_pic"    />
        <result property="dangerPic"    column="danger_pic"    />
    </resultMap>
    
    <resultMap type="OwnerUnitDanger" id="OwnerUnitDangerResult">
        <result property="id"    column="id"    />
        <result property="unitId"    column="unit_id"    />
        <result property="detectId"    column="detect_id"    />
        <result property="unitName"    column="unit_name"    />
        <result property="buildingId"    column="building_id"    />
        <result property="buildingName"    column="building_name"    />
        <result property="unitAreaId"    column="unit_area_id"    />
        <result property="areaName"    column="area_name"    />
        <result property="chargingPileId"    column="charging_pile_id"    />
        <result property="chargingPileName"    column="charging_pile_name"    />
        <result property="rounds"    column="rounds"    />
        <result property="dangerId"    column="danger_id"    />
        <result property="projectId"    column="project_id"    />
        <result property="projectType"    column="project_type"    />
        <result property="formId"    column="form_id"    />
        <result property="formCode"    column="form_code"    />
        <result property="formType"    column="form_type"    />
        <result property="formDataId"    column="form_data_id"    />
        <result property="level"    column="level"    />
        <result property="description"    column="description"    />
        <result property="suggestions"    column="suggestions"    />
        <result property="location"    column="location"    />
        <result property="dangerPic"    column="danger_pic"    />
        <result property="status"    column="status"    />
        <result property="inspector"    column="inspector"    />
        <result property="inspectorId"    column="inspector_id"    />
        <result property="initialTime"    column="initial_time"    />
        <result property="formb"    column="formb"  typeHandler="com.ruoyi.electrical.danger.type.JsonObjectTypeHandler"  />
        <result property="rectification"    column="rectification"    />
        <result property="rectificationDate"    column="rectification_date"    />
        <result property="reviewer"    column="reviewer"    />
        <result property="reviewerDate"    column="reviewer_date"    />
        <result property="rectificationPic"    column="rectification_pic"    />
        <result property="reason"    column="reason"    />
        <result property="detectPic"    column="detect_pic"    />
        <result property="overallPic"    column="overall_pic"    />
        <result property="inspectionPic"    column="inspection_pic"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectOwnerUnitDangerVo">
        select d.id, d.unit_id, u.name as unit_name, u.detect_id, a.name as area_name, b.name as building_name, 
        p.id as project_id, p.type as project_type,
        d.charging_pile_id, d.rounds,
        d.building_id, d.unit_area_id, d.danger_id, d.form_id, d.form_code, d.form_type, d.form_data_id, d.formb,
        d.level, d.description, d.suggestions, d.location, d.danger_pic, d.status, d.inspector, d.inspector_id, d.initial_time, 
        d.rectification, d.rectification_date, d.reviewer, d.reviewer_date, d.rectification_pic, d.reason, d.detect_pic, 
        d.create_by, d.create_time, d.update_by, d.update_time, 
        ( select GROUP_CONCAT(cp.name) from charging_pile cp where cp.id member of(d.charging_pile_id) and cp.unit_id = d.unit_id ) as charging_pile_name,
        JSON_UNQUOTE(d.formb->'$.data.overallPic') as overall_pic,  JSON_UNQUOTE(d.formb->'$.data.inspectionPic') as inspection_pic  
        from owner_unit_danger d 
        left join owner_unit u on u.id = d.unit_id
        left join project p on p.id = u.project_id
        left join owner_unit_area a on a.id = d.unit_area_id
        left join owner_unit_building b on b.id = d.building_id
    </sql>
    
    <sql id="selectBasicOwnerUnitDangerVo">
        select id, unit_id, building_id, unit_area_id, charging_pile_id, rounds, danger_id, form_id, form_code, form_type, form_data_id, level, description, suggestions, location, danger_pic, status, inspector, inspector_id, initial_time, formb, rectification, rectification_date, reviewer, reviewer_date, rectification_pic, reason, detect_pic, create_by, create_time, update_by, update_time from owner_unit_danger
    </sql>

    <select id="ownerUnitDangerList" parameterType="OwnerUnitDanger" resultMap="OwnerUnitDangerResult">
        <include refid="selectOwnerUnitDangerVo"/>
        <where>  
            <if test="location != null  and location != ''"> 
            and (d.location like concat('%', #{location}, '%') 
            or u.name like concat('%', #{location}, '%')
            or a.name like concat('%', #{location}, '%')
            or b.name like concat('%', #{location}, '%')
            )
            </if>
            <if test="rounds != null  and rounds != ''"> and d.rounds = #{rounds}</if>
            <if test="status != null  and status != ''"> and d.status = #{status}</if>
            <if test="projectId != null  and projectId != ''"> and u.project_id = #{projectId}</if>
            <if test="level != null  and level != ''"> and d.level = #{level}</if>
            <if test="buildingId != null  and buildingId != ''"> and d.building_id = #{buildingId}</if>
            <if test="unitId != null  and unitId != ''"> and d.unit_id = #{unitId}</if>
            <if test="level != null  and level != ''"> and d.level = #{level}</if>
            <if test="initialTime != null"> and date(d.initial_time) = #{initialTime}</if>
            <if test="formId != null"> and d.form_id = #{formId}</if>
        </where>
    </select>
    
    <select id="ownerUnitDangerById" parameterType="Long" resultMap="OwnerUnitDangerResult">
        <include refid="selectOwnerUnitDangerVo"/>
        where d.id = #{id}
    </select>
    
    <select id="selecOwnerUnitBuildingDict" parameterType="Long" resultType="com.ruoyi.electrical.vo.DictVO">
        select b.id, b.name from owner_unit_building b where b.unit_id = #{unitId}
    </select>
    
    <select id="selectOwnerUnitDangerList" parameterType="OwnerUnitDanger" resultMap="OwnerUnitDangerResult">
        <include refid="selectBasicOwnerUnitDangerVo"/>
        <where>  
            <if test="unitId != null "> and unit_id = #{unitId}</if>
            <if test="buildingId != null "> and building_id = #{buildingId}</if>
            <if test="unitAreaId != null "> and unit_area_id = #{unitAreaId}</if>
            <if test="chargingPileId != null  and chargingPileId != ''"> and charging_pile_id = #{chargingPileId}</if>
            <if test="rounds != null "> and rounds = #{rounds}</if>
            <if test="dangerId != null "> and danger_id = #{dangerId}</if>
            <if test="formId != null "> and form_id = #{formId}</if>
            <if test="formCode != null  and formCode != ''"> and form_code = #{formCode}</if>
            <if test="formType != null  and formType != ''"> and form_type = #{formType}</if>
            <if test="formDataId != null "> and form_data_id = #{formDataId}</if>
            <if test="level != null  and level != ''"> and level = #{level}</if>
            <if test="description != null  and description != ''"> and description = #{description}</if>
            <if test="suggestions != null  and suggestions != ''"> and suggestions = #{suggestions}</if>
            <if test="location != null  and location != ''"> and location = #{location}</if>
            <if test="dangerPic != null  and dangerPic != ''"> and danger_pic = #{dangerPic}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="inspector != null  and inspector != ''"> and inspector = #{inspector}</if>
            <if test="inspectorId != null "> and inspector_id = #{inspectorId}</if>
            <if test="initialTime != null "> and initial_time = #{initialTime}</if>
            <if test="formb != null  and formb != ''"> and formb = #{formb}</if>
            <if test="rectification != null  and rectification != ''"> and rectification = #{rectification}</if>
            <if test="rectificationDate != null "> and rectification_date = #{rectificationDate}</if>
            <if test="reviewer != null  and reviewer != ''"> and reviewer = #{reviewer}</if>
            <if test="reviewerDate != null "> and reviewer_date = #{reviewerDate}</if>
            <if test="rectificationPic != null  and rectificationPic != ''"> and rectification_pic = #{rectificationPic}</if>
            <if test="reason != null  and reason != ''"> and reason = #{reason}</if>
            <if test="detectPic != null  and detectPic != ''"> and detect_pic = #{detectPic}</if>
        </where>
    </select>
    
    <select id="selectOwnerUnitDangerById" parameterType="Long" resultMap="OwnerUnitDangerResult">
        <include refid="selectBasicOwnerUnitDangerVo"/>
        where id = #{id}
    </select>

    <insert id="insertOwnerUnitDanger" parameterType="OwnerUnitDanger" useGeneratedKeys="true" keyProperty="id">
        insert into owner_unit_danger
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="unitId != null">unit_id,</if>
            <if test="buildingId != null">building_id,</if>
            <if test="unitAreaId != null">unit_area_id,</if>
            <if test="chargingPileId != null">charging_pile_id,</if>
            <if test="rounds != null">rounds,</if>
            <if test="dangerId != null">danger_id,</if>
            <if test="formId != null">form_id,</if>
            <if test="formCode != null">form_code,</if>
            <if test="formType != null">form_type,</if>
            <if test="formDataId != null">form_data_id,</if>
            <if test="level != null">level,</if>
            <if test="description != null">description,</if>
            <if test="suggestions != null">suggestions,</if>
            <if test="location != null">location,</if>
            <if test="dangerPic != null">danger_pic,</if>
            <if test="status != null">status,</if>
            <if test="inspector != null">inspector,</if>
            <if test="inspectorId != null">inspector_id,</if>
            <if test="initialTime != null">initial_time,</if>
            <if test="formb != null">formb,</if>
            <if test="rectification != null">rectification,</if>
            <if test="rectificationDate != null">rectification_date,</if>
            <if test="reviewer != null">reviewer,</if>
            <if test="reviewerDate != null">reviewer_date,</if>
            <if test="rectificationPic != null">rectification_pic,</if>
            <if test="reason != null">reason,</if>
            <if test="detectPic != null">detect_pic,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="unitId != null">#{unitId},</if>
            <if test="buildingId != null">#{buildingId},</if>
            <if test="unitAreaId != null">#{unitAreaId},</if>
            <if test="chargingPileId != null">#{chargingPileId},</if>
            <if test="rounds != null">#{rounds},</if>
            <if test="dangerId != null">#{dangerId},</if>
            <if test="formId != null">#{formId},</if>
            <if test="formCode != null">#{formCode},</if>
            <if test="formType != null">#{formType},</if>
            <if test="formDataId != null">#{formDataId},</if>
            <if test="level != null">#{level},</if>
            <if test="description != null">#{description},</if>
            <if test="suggestions != null">#{suggestions},</if>
            <if test="location != null">#{location},</if>
            <if test="dangerPic != null">#{dangerPic},</if>
            <if test="status != null">#{status},</if>
            <if test="inspector != null">#{inspector},</if>
            <if test="inspectorId != null">#{inspectorId},</if>
            <if test="initialTime != null">#{initialTime},</if>
            <if test="formb != null">#{formb,typeHandler=com.ruoyi.electrical.danger.type.JsonObjectTypeHandler},</if>
            <if test="rectification != null">#{rectification},</if>
            <if test="rectificationDate != null">#{rectificationDate},</if>
            <if test="reviewer != null">#{reviewer},</if>
            <if test="reviewerDate != null">#{reviewerDate},</if>
            <if test="rectificationPic != null">#{rectificationPic},</if>
            <if test="reason != null">#{reason},</if>
            <if test="detectPic != null">#{detectPic},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateOwnerUnitDanger" parameterType="OwnerUnitDanger">
        update owner_unit_danger
        <trim prefix="SET" suffixOverrides=",">
            <if test="unitId != null">unit_id = #{unitId},</if>
            <if test="buildingId != null">building_id = #{buildingId},</if>
            <if test="unitAreaId != null">unit_area_id = #{unitAreaId},</if>
            <if test="chargingPileId != null">charging_pile_id = #{chargingPileId},</if>
            <if test="rounds != null">rounds = #{rounds},</if>
            <if test="dangerId != null">danger_id = #{dangerId},</if>
            <if test="formId != null">form_id = #{formId},</if>
            <if test="formCode != null">form_code = #{formCode},</if>
            <if test="formType != null">form_type = #{formType},</if>
            <if test="formDataId != null">form_data_id = #{formDataId},</if>
            <if test="level != null">level = #{level},</if>
            <if test="description != null">description = #{description},</if>
            <if test="suggestions != null">suggestions = #{suggestions},</if>
            <if test="location != null">location = #{location},</if>
            <if test="dangerPic != null">danger_pic = #{dangerPic},</if>
            <if test="status != null">status = #{status},</if>
            <if test="inspector != null">inspector = #{inspector},</if>
            <if test="inspectorId != null">inspector_id = #{inspectorId},</if>
            <if test="initialTime != null">initial_time = #{initialTime},</if>
            <if test="formb != null">formb = #{formb,typeHandler=com.ruoyi.electrical.danger.type.JsonObjectTypeHandler},</if>
            <if test="rectification != null">rectification = #{rectification},</if>
            <if test="rectificationDate != null">rectification_date = #{rectificationDate},</if>
            <if test="reviewer != null">reviewer = #{reviewer},</if>
            <if test="reviewerDate != null">reviewer_date = #{reviewerDate},</if>
            <if test="rectificationPic != null">rectification_pic = #{rectificationPic},</if>
            <if test="reason != null">reason = #{reason},</if>
            <if test="detectPic != null">detect_pic = #{detectPic},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteOwnerUnitDangerById" parameterType="Long">
        delete from owner_unit_danger where id = #{id}
    </delete>

    <delete id="deleteOwnerUnitDangerByIds" parameterType="String">
        delete from owner_unit_danger where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <select id="selectOwnerDangerHighReportByUnitId" parameterType="Long" resultMap="HighReportDanger">
    	select da.first_content, dd.score,dd.id, d.description, d.suggestions, d.danger_pic, d.inspector_id, d.danger_id,
    	id.id as form_id, id.first_content as form_name, id.max_score, da.id as form_data_id, da.first_content as form_data_name,
    	(CASE WHEN dd.acc_method is null THEN '1' ELSE dd.acc_method END) as acc_method, da.max_score as data_max_score,
    	d.rectification_pic,d.level,d.status,d.remark,
    	JSON_UNQUOTE(d.formb->'$.data.overallPic') as overall_pic,  
    	JSON_UNQUOTE(d.formb->'$.data.inspectionPic') as inspection_pic
    	from owner_unit_danger d 
		left join intuitive_detect_danger dd on dd.id = d.danger_id
		left join intuitive_detect_data da on da.id = dd.data_id
		left join intuitive_detect_data id on id.id = da.parent_id
		where d.unit_id = #{unitId} order by d.id asc
    </select>
    
     <resultMap type="com.ruoyi.electrical.vo.OwnerUnitDangerGroupDetailVo" id="OwnerUnitDangerGroupDetail">
    	<result property="initialStatus"    column="initial_status"    />
    	<result property="reviewStatus"    column="review_status"    />
    	<result property="highRiskType"    column="high_risk_type"    />
    	<result property="unitId"    column="unit_id"    />
    </resultMap>
    
    <select id="ownerUnitDangerGroupList" parameterType="com.ruoyi.electrical.dto.OwnerUnitDangerGroupDetailDto" resultMap="OwnerUnitDangerGroupDetail">
    	select t.* from (select o.id, o.name, o.district, o.street, o.community, o.hamlet, o.high_risk_type,
		CASE WHEN r1.detect_status is null THEN 0 ELSE r1.detect_status END as initial_status,
		CASE WHEN r2.detect_status is null THEN 0 ELSE r2.detect_status END as review_status,
		CASE WHEN r1.detect_data is null THEN now() ELSE r1.detect_data END as initial_date,
		CASE WHEN r2.detect_data is null THEN now() ELSE r2.detect_data END as review_date,
		(select count(1) as dangers from owner_unit_danger ud1 where ud1.unit_id = o.id and ud1.status = 0 and ud1.rounds = o.rounds ) as rectifications,
		(select count(1) as dangers from owner_unit_danger ud2 where ud2.unit_id = o.id and ud2.status = 1 and ud2.rounds = o.rounds ) as reexaminations,
		(select count(1) as dangers from owner_unit_danger ud3 where ud3.unit_id = o.id and ud3.status = 2 and ud3.rounds = o.rounds ) as finishs,
		(select count(1) from owner_unit_danger t where t.unit_id = o.id and t.rounds = o.rounds ) as dangers
		from owner_unit o 
		left join owner_unit_report r1 on r1.unit_id = o.id and r1.type = '1'
		left join owner_unit_report r2 on r2.unit_id = o.id and r1.type = '2'
		where o.project_id = #{projectId}) t
		<where>  
            <if test="name != null and name !='' "> and t.name like concat('%', #{name}, '%')</if>
            <if test="district != null and district !='' "> and t.district = #{district}</if>
            <if test="street != null and street !='' "> and t.street = #{street}</if>
            <if test="community != null and community !='' "> and t.community = #{community}</if>
            <if test="hamlet != null and hamlet !='' "> and t.hamlet = #{hamlet}</if>
            <if test="highRiskType != null and highRiskType !='' "> and t.high_risk_type = #{highRiskType}</if>
            <if test="initialStatus != null and initialStatus !='' "> and t.initial_status = #{initialStatus}</if>
            <if test="reviewStatus != null and reviewStatus !='' "> and t.review_status = #{reviewStatus}</if>
            <if test="startInitialDate != null and startInitialDate !='' "> and date(t.initial_date) &gt;= #{startInitialDate}</if>
            <if test="endInitialDate != null and endInitialDate !='' "> and date(t.initial_date) &lt;= #{endInitialDate}</if>
            <if test="startReviewDate != null and startReviewDate !='' "> and date(t.review_date) &gt;= #{startReviewDate}</if>
            <if test="endReivewDate != null and endReivewDate !='' "> and date(t.review_date) &lt;= #{endReivewDate}</if>
        </where>
    	
    </select>
    
     <select id="ownerUnitBuildingDangerGroupList" parameterType="com.ruoyi.electrical.dto.OwnerUnitDangerGroupDetailDto" resultMap="OwnerUnitDangerGroupDetail">
    	select t.* from (select o.id, o.unit_id, o.name, 
		CASE WHEN o.status is null THEN 0 ELSE o.status END as initial_status,
		CASE WHEN o.review_status is null THEN 0 ELSE o.review_status END as review_status,
		(select count(1) as dangers from owner_unit_danger ud1 where ud1.building_id = o.id and ud1.status = 0 ) as rectifications,
		(select count(1) as dangers from owner_unit_danger ud2 where ud2.building_id = o.id and ud2.status = 1 ) as reexaminations,
		(select count(1) as dangers from owner_unit_danger ud3 where ud3.building_id = o.id and ud3.status = 2 ) as finishs,
		(select count(1) from owner_unit_danger t where t.building_id = o.id ) as dangers
		from owner_unit_building o 
		where o.unit_id = #{unitId}) t
		<where>  
            <if test="name != null and name !='' "> and t.name like concat('%', #{name}, '%')</if>
            <if test="initialStatus != null and initialStatus !='' "> and t.initial_status = #{initialStatus}</if>
            <if test="reviewStatus != null and reviewStatus !='' "> and t.review_status = #{reviewStatus}</if>
        </where>
    	
    </select>
    
    <resultMap type="com.ruoyi.electrical.report.dto.station.StationDanger" id="StationDangerResult">
        <result property="chargingPileName"    column="charging_pile_name"    />
        <result property="dangerId"    column="danger_id"    />
        <result property="formId"    column="form_id"    />
        <result property="formCode"    column="form_code"    />
        <result property="formType"    column="form_type"    />
        <result property="formDataId"    column="form_data_id"    />
        <result property="level"    column="level"    />
        <result property="description"    column="description"    />
        <result property="suggestions"    column="suggestions"    />
        <result property="location"    column="location"    />
        <result property="weightsCEs"    column="weights_c_es"    />
        <result property="weightsCNes"    column="weights_c_nes"    />
        <result property="weightsDEs"    column="weights_d_es"    />
        <result property="weightsDNes"    column="weights_d_nes"    />
        <result property="firstCode"    column="first_code"    />
        <result property="chargingPileId"    column="charging_pile_id"  typeHandler="com.ruoyi.electrical.type.ListStringTypeHandler"   />
    </resultMap>


	<select id="stationReportDangerList" resultMap="StationDangerResult">
        select d.id, d.unit_id, u.name as unit_name, u.detect_id, a.name as area_name, b.name as building_name, 
        p.id as project_id, p.type as project_type,
        d.charging_pile_id, d.rounds,
        d.building_id, d.unit_area_id, d.danger_id, d.form_id, d.form_code, d.form_type, d.form_data_id,
        d.level, d.description, d.suggestions, d.location,
        idd.first_code, idd.weights_c_es, idd.weights_c_nes, idd.weights_d_es, idd.weights_d_nes,
        ( select GROUP_CONCAT(cp.name) from charging_pile cp where cp.id member of(d.charging_pile_id) and cp.unit_id = d.unit_id ) as charging_pile_name
        from owner_unit_danger d 
        left join owner_unit u on u.id = d.unit_id and u.rounds = d.rounds
        left join project p on p.id = u.project_id
        left join owner_unit_area a on a.id = d.unit_area_id
        left join owner_unit_building b on b.id = d.building_id
        left join intuitive_detect_data idd on idd.id = d.form_data_id
        where d.unit_id = #{unitId} and u.rounds = d.rounds
    </select>
    
</mapper>