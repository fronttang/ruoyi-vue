<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.electrical.template.mapper.IntuitiveDetectDangerMapper">
    
    <resultMap type="IntuitiveDetectDanger" id="IntuitiveDetectDangerResult">
        <result property="id"    column="id"    />
        <result property="templateId"    column="template_id"    />
        <result property="dataId"    column="data_id"    />
        <result property="level"    column="level"    />
        <result property="description"    column="description"    />
        <result property="suggestions"    column="suggestions"    />
        <result property="accMethod"    column="acc_method"    />
        <result property="score"    column="score"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectIntuitiveDetectDangerVo">
        select id, template_id, data_id, level, description, suggestions, acc_method, score, create_by, create_time, update_by, update_time from intuitive_detect_danger
    </sql>

    <select id="selectIntuitiveDetectDangerList" parameterType="IntuitiveDetectDanger" resultMap="IntuitiveDetectDangerResult">
        <include refid="selectIntuitiveDetectDangerVo"/>
        <where>  
            <if test="templateId != null "> and template_id = #{templateId}</if>
            <if test="dataId != null "> and data_id = #{dataId}</if>
            <if test="level != null  and level != ''"> and level = #{level}</if>
            <if test="description != null  and description != ''"> and description = #{description}</if>
            <if test="suggestions != null  and suggestions != ''"> and suggestions = #{suggestions}</if>
            <if test="accMethod != null  and accMethod != ''"> and acc_method = #{accMethod}</if>
            <if test="score != null "> and score = #{score}</if>
        </where>
        order by id asc
    </select>
    
    <select id="selectIntuitiveDetectDangerById" parameterType="Long" resultMap="IntuitiveDetectDangerResult">
        <include refid="selectIntuitiveDetectDangerVo"/>
        where id = #{id}
    </select>
    
    <select id="selectIntuitiveDetectDangersByDataId" parameterType="Long" resultMap="IntuitiveDetectDangerResult">
        <include refid="selectIntuitiveDetectDangerVo"/>
        where data_id = #{dataId}
    </select>
    
    <select id="countDangersByDataIdAndUnitId" resultType="Long">
         select count(1) from owner_unit_danger d where d.unit_id = #{unitId} and exists (
			select dd.id from intuitive_detect_danger dd left join intuitive_detect_data da on da.id = dd.data_id where dd.id = d.danger_id and da.id = #{dataId}
		)
    </select>

    <insert id="insertIntuitiveDetectDanger" parameterType="IntuitiveDetectDanger" useGeneratedKeys="true" keyProperty="id">
        insert into intuitive_detect_danger
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="templateId != null">template_id,</if>
            <if test="dataId != null">data_id,</if>
            <if test="level != null">level,</if>
            <if test="description != null">description,</if>
            <if test="suggestions != null">suggestions,</if>
            <if test="accMethod != null">acc_method,</if>
            <if test="score != null">score,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="templateId != null">#{templateId},</if>
            <if test="dataId != null">#{dataId},</if>
            <if test="level != null">#{level},</if>
            <if test="description != null">#{description},</if>
            <if test="suggestions != null">#{suggestions},</if>
            <if test="accMethod != null">#{accMethod},</if>
            <if test="score != null">#{score},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateIntuitiveDetectDanger" parameterType="IntuitiveDetectDanger">
        update intuitive_detect_danger
        <trim prefix="SET" suffixOverrides=",">
            <if test="templateId != null">template_id = #{templateId},</if>
            <if test="dataId != null">data_id = #{dataId},</if>
            <if test="level != null">level = #{level},</if>
            <if test="description != null">description = #{description},</if>
            <if test="suggestions != null">suggestions = #{suggestions},</if>
            <if test="accMethod != null">acc_method = #{accMethod},</if>
            <if test="score != null">score = #{score},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteIntuitiveDetectDangerById" parameterType="Long">
        delete from intuitive_detect_danger where id = #{id}
    </delete>

    <delete id="deleteIntuitiveDetectDangerByIds" parameterType="String">
        delete from intuitive_detect_danger where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteIntuitiveDetectDangerByDataId" parameterType="Long">
        delete from intuitive_detect_danger where data_id = #{id}
    </delete>
    
    <delete id="deleteIntuitiveDetectDangerByTemplateId" parameterType="Long">
        delete from intuitive_detect_danger where template_id = #{templateId}
    </delete>

    <delete id="deleteIntuitiveDetectDangerByDataIds" parameterType="String">
        delete from intuitive_detect_danger where data_id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>